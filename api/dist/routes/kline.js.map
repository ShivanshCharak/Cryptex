{"version":3,"file":"kline.js","sourceRoot":"","sources":["../../src/routes/kline.ts"],"names":[],"mappings":";;;AAAA,2BAA4B;AAC5B,qCAAiC;AACjC,mDAAyD;AAGzD,MAAM,QAAQ,GAAG,IAAI,WAAM,CAAC;IACxB,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,WAAW;IACjB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,aAAa;IACvB,IAAI,EAAE,IAAI;CACb,CAAC,CAAC;AACH,QAAQ,CAAC,OAAO,EAAE,CAAC;AAEN,QAAA,WAAW,GAAU,IAAA,gBAAM,GAAE,CAAC;AAE3C,mBAAW,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACpC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;IACpB,0BAAgB,CAAC,GAAG,CAAC;QACf,MAAM,EAAC,KAAK;QACZ,MAAM,EAAC,eAAe;KACzB,CAAC,CAAA;IACN,MAAM,EAAG,SAAS,EAAE,OAAO,EAAC,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;IACjD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,SAAS,EAAC,OAAO,EAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IACpD,IAAI,MAAM,GAAG,MAAM,EAAE,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,CAAA;IAC5D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IACnB,IAAI,KAAK,CAAC;IACV,QAAQ,IAAI,EAAE,CAAC;QACX,aAAa;QACb,6EAA6E;QAC7E,aAAa;QACb,KAAK,IAAI;YACL,KAAK,GAAG,wBAAwB,MAAM,0CAA0C,CAAC;YACjF,MAAM;YACV,aAAa;YACb,6EAA6E;YAC7E,aAAa;YACb,WAAW;YACP,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACxD,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,EAAC,KAAK,CAAC,CAAA;IACtC,IAAI,CAAC;QACD,YAAY;QACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC,SAAS,EAAC,OAAO,CAAC,CAAA;QACvC,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACrG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QAC1B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3B,KAAK,EAAE,CAAC,CAAC,KAAK;YACd,GAAG,EAAE,CAAC,CAAC,MAAM;YACb,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,GAAG,EAAE,CAAC,CAAC,GAAG;YACV,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,WAAW,EAAE,CAAC,CAAC,WAAW;YAC1B,KAAK,EAAE,CAAC,CAAC,KAAK;YACd,MAAM,EAAE,CAAC,CAAC,MAAM;YAChB,MAAM,EAAE,CAAC,CAAC,MAAM;SACnB,CAAC,CAAC,CAAC,CAAC;IACT,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { Client } from 'pg';\nimport { Router } from \"express\";\nimport { httpTotalRequest } from '@repo/backend/metrics';\n\n\nconst pgClient = new Client({\n    user: 'shivansh',\n    host: 'localhost',\n    database: 'crypto',\n    password: 'shamsher@54',\n    port: 5432,\n});\npgClient.connect();\n\nexport const klineRouter:Router = Router();\n\nklineRouter.get(\"/\", async (req, res) => {\n    console.log(\"HITTING\")\n      httpTotalRequest.inc({\n            method:\"get\",\n            routes:\"api/v1/klines\"\n        })\n    const {  startTime, endTime,symbol } = req.query;\n    console.log(\"starttime\",startTime,endTime,req.query)\n    let market = symbol?.toString().split(\"_\")[0]?.toLowerCase()\n    console.log(market)\n    let query;\n    switch ('1h') {\n        // case '1m':\n        //     query = `SELECT * FROM klines_1m WHERE bucket >= $1 AND bucket <= $2`;\n        //     break;\n        case '1h':\n            query = `SELECT * FROM klines_${market}_1h WHERE  bucket >= $1 AND bucket <= $2`;\n            break;\n        // case '1w':\n        //     query = `SELECT * FROM klines_1w WHERE bucket >= $1 AND bucket <= $2`;\n        //     break;\n        // default:\n            return res.status(400).send('Invalid interval');\n    }\n\n    console.log(\"resultdata\", \"fjv\",query)\n    try {\n        //@ts-ignore\n        console.log(\"result\",startTime,endTime)\n        const result = await pgClient.query(query, [new Date(Number(endTime)), new Date(Number(startTime))]);\n        console.table(result.rows)\n        res.json(result.rows.map(x => ({\n            close: x.close,\n            end: x.bucket,\n            high: x.high,\n            low: x.low,\n            open: x.open,\n            quoteVolume: x.quoteVolume,\n            start: x.start,\n            trades: x.trades,\n            volume: x.volume,\n        })));\n    } catch (err) {\n        console.log(err);\n        res.status(500).send(err);\n    }\n});\n"]}